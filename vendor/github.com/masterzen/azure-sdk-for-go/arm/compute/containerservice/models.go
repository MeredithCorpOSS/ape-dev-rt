package compute

// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

import (
	"github.com/Azure/go-autorest/autorest"
)

// ContainerServiceOchestratorTypes enumerates the values for container
// service ochestrator types.
type ContainerServiceOchestratorTypes string

const (
	// DCOS specifies the dcos state for container service ochestrator types.
	DCOS ContainerServiceOchestratorTypes = "DCOS"
	// Swarm specifies the swarm state for container service ochestrator types.
	Swarm ContainerServiceOchestratorTypes = "Swarm"
)

// ContainerServiceVMSizeTypes enumerates the values for container service vm
// size types.
type ContainerServiceVMSizeTypes string

const (
	// StandardA0 specifies the standard a0 state for container service vm
	// size types.
	StandardA0 ContainerServiceVMSizeTypes = "Standard_A0"
	// StandardA1 specifies the standard a1 state for container service vm
	// size types.
	StandardA1 ContainerServiceVMSizeTypes = "Standard_A1"
	// StandardA10 specifies the standard a10 state for container service vm
	// size types.
	StandardA10 ContainerServiceVMSizeTypes = "Standard_A10"
	// StandardA11 specifies the standard a11 state for container service vm
	// size types.
	StandardA11 ContainerServiceVMSizeTypes = "Standard_A11"
	// StandardA2 specifies the standard a2 state for container service vm
	// size types.
	StandardA2 ContainerServiceVMSizeTypes = "Standard_A2"
	// StandardA3 specifies the standard a3 state for container service vm
	// size types.
	StandardA3 ContainerServiceVMSizeTypes = "Standard_A3"
	// StandardA4 specifies the standard a4 state for container service vm
	// size types.
	StandardA4 ContainerServiceVMSizeTypes = "Standard_A4"
	// StandardA5 specifies the standard a5 state for container service vm
	// size types.
	StandardA5 ContainerServiceVMSizeTypes = "Standard_A5"
	// StandardA6 specifies the standard a6 state for container service vm
	// size types.
	StandardA6 ContainerServiceVMSizeTypes = "Standard_A6"
	// StandardA7 specifies the standard a7 state for container service vm
	// size types.
	StandardA7 ContainerServiceVMSizeTypes = "Standard_A7"
	// StandardA8 specifies the standard a8 state for container service vm
	// size types.
	StandardA8 ContainerServiceVMSizeTypes = "Standard_A8"
	// StandardA9 specifies the standard a9 state for container service vm
	// size types.
	StandardA9 ContainerServiceVMSizeTypes = "Standard_A9"
	// StandardD1 specifies the standard d1 state for container service vm
	// size types.
	StandardD1 ContainerServiceVMSizeTypes = "Standard_D1"
	// StandardD11 specifies the standard d11 state for container service vm
	// size types.
	StandardD11 ContainerServiceVMSizeTypes = "Standard_D11"
	// StandardD11V2 specifies the standard d11v2 state for container service
	// vm size types.
	StandardD11V2 ContainerServiceVMSizeTypes = "Standard_D11_v2"
	// StandardD12 specifies the standard d12 state for container service vm
	// size types.
	StandardD12 ContainerServiceVMSizeTypes = "Standard_D12"
	// StandardD12V2 specifies the standard d12v2 state for container service
	// vm size types.
	StandardD12V2 ContainerServiceVMSizeTypes = "Standard_D12_v2"
	// StandardD13 specifies the standard d13 state for container service vm
	// size types.
	StandardD13 ContainerServiceVMSizeTypes = "Standard_D13"
	// StandardD13V2 specifies the standard d13v2 state for container service
	// vm size types.
	StandardD13V2 ContainerServiceVMSizeTypes = "Standard_D13_v2"
	// StandardD14 specifies the standard d14 state for container service vm
	// size types.
	StandardD14 ContainerServiceVMSizeTypes = "Standard_D14"
	// StandardD14V2 specifies the standard d14v2 state for container service
	// vm size types.
	StandardD14V2 ContainerServiceVMSizeTypes = "Standard_D14_v2"
	// StandardD1V2 specifies the standard d1v2 state for container service vm
	// size types.
	StandardD1V2 ContainerServiceVMSizeTypes = "Standard_D1_v2"
	// StandardD2 specifies the standard d2 state for container service vm
	// size types.
	StandardD2 ContainerServiceVMSizeTypes = "Standard_D2"
	// StandardD2V2 specifies the standard d2v2 state for container service vm
	// size types.
	StandardD2V2 ContainerServiceVMSizeTypes = "Standard_D2_v2"
	// StandardD3 specifies the standard d3 state for container service vm
	// size types.
	StandardD3 ContainerServiceVMSizeTypes = "Standard_D3"
	// StandardD3V2 specifies the standard d3v2 state for container service vm
	// size types.
	StandardD3V2 ContainerServiceVMSizeTypes = "Standard_D3_v2"
	// StandardD4 specifies the standard d4 state for container service vm
	// size types.
	StandardD4 ContainerServiceVMSizeTypes = "Standard_D4"
	// StandardD4V2 specifies the standard d4v2 state for container service vm
	// size types.
	StandardD4V2 ContainerServiceVMSizeTypes = "Standard_D4_v2"
	// StandardD5V2 specifies the standard d5v2 state for container service vm
	// size types.
	StandardD5V2 ContainerServiceVMSizeTypes = "Standard_D5_v2"
	// StandardDS1 specifies the standard ds1 state for container service vm
	// size types.
	StandardDS1 ContainerServiceVMSizeTypes = "Standard_DS1"
	// StandardDS11 specifies the standard ds11 state for container service vm
	// size types.
	StandardDS11 ContainerServiceVMSizeTypes = "Standard_DS11"
	// StandardDS12 specifies the standard ds12 state for container service vm
	// size types.
	StandardDS12 ContainerServiceVMSizeTypes = "Standard_DS12"
	// StandardDS13 specifies the standard ds13 state for container service vm
	// size types.
	StandardDS13 ContainerServiceVMSizeTypes = "Standard_DS13"
	// StandardDS14 specifies the standard ds14 state for container service vm
	// size types.
	StandardDS14 ContainerServiceVMSizeTypes = "Standard_DS14"
	// StandardDS2 specifies the standard ds2 state for container service vm
	// size types.
	StandardDS2 ContainerServiceVMSizeTypes = "Standard_DS2"
	// StandardDS3 specifies the standard ds3 state for container service vm
	// size types.
	StandardDS3 ContainerServiceVMSizeTypes = "Standard_DS3"
	// StandardDS4 specifies the standard ds4 state for container service vm
	// size types.
	StandardDS4 ContainerServiceVMSizeTypes = "Standard_DS4"
	// StandardG1 specifies the standard g1 state for container service vm
	// size types.
	StandardG1 ContainerServiceVMSizeTypes = "Standard_G1"
	// StandardG2 specifies the standard g2 state for container service vm
	// size types.
	StandardG2 ContainerServiceVMSizeTypes = "Standard_G2"
	// StandardG3 specifies the standard g3 state for container service vm
	// size types.
	StandardG3 ContainerServiceVMSizeTypes = "Standard_G3"
	// StandardG4 specifies the standard g4 state for container service vm
	// size types.
	StandardG4 ContainerServiceVMSizeTypes = "Standard_G4"
	// StandardG5 specifies the standard g5 state for container service vm
	// size types.
	StandardG5 ContainerServiceVMSizeTypes = "Standard_G5"
	// StandardGS1 specifies the standard gs1 state for container service vm
	// size types.
	StandardGS1 ContainerServiceVMSizeTypes = "Standard_GS1"
	// StandardGS2 specifies the standard gs2 state for container service vm
	// size types.
	StandardGS2 ContainerServiceVMSizeTypes = "Standard_GS2"
	// StandardGS3 specifies the standard gs3 state for container service vm
	// size types.
	StandardGS3 ContainerServiceVMSizeTypes = "Standard_GS3"
	// StandardGS4 specifies the standard gs4 state for container service vm
	// size types.
	StandardGS4 ContainerServiceVMSizeTypes = "Standard_GS4"
	// StandardGS5 specifies the standard gs5 state for container service vm
	// size types.
	StandardGS5 ContainerServiceVMSizeTypes = "Standard_GS5"
)

// ContainerService is container service
type ContainerService struct {
	autorest.Response `json:"-"`
	ID                *string                     `json:"id,omitempty"`
	Name              *string                     `json:"name,omitempty"`
	Type              *string                     `json:"type,omitempty"`
	Location          *string                     `json:"location,omitempty"`
	Tags              *map[string]*string         `json:"tags,omitempty"`
	Properties        *ContainerServiceProperties `json:"properties,omitempty"`
}

// ContainerServiceAgentPoolProfile is profile for container service agent pool
type ContainerServiceAgentPoolProfile struct {
	Name      *string                     `json:"name,omitempty"`
	Count     *int32                      `json:"count,omitempty"`
	VMSize    ContainerServiceVMSizeTypes `json:"vmSize,omitempty"`
	DNSPrefix *string                     `json:"dnsPrefix,omitempty"`
	Fqdn      *string                     `json:"fqdn,omitempty"`
}

// ContainerServiceDiagnosticsProfile is
type ContainerServiceDiagnosticsProfile struct {
	VMDiagnostics *ContainerServiceVMDiagnostics `json:"vmDiagnostics,omitempty"`
}

// ContainerServiceLinuxProfile is profile for Linux VMs
type ContainerServiceLinuxProfile struct {
	AdminUsername *string                           `json:"adminUsername,omitempty"`
	SSH           *ContainerServiceSSHConfiguration `json:"ssh,omitempty"`
}

// ContainerServiceListResult is the List Container Service operation response
type ContainerServiceListResult struct {
	autorest.Response `json:"-"`
	Value             *[]ContainerService `json:"value,omitempty"`
}

// ContainerServiceMasterProfile is profile for container service master
type ContainerServiceMasterProfile struct {
	Count     *int32  `json:"count,omitempty"`
	DNSPrefix *string `json:"dnsPrefix,omitempty"`
	Fqdn      *string `json:"fqdn,omitempty"`
}

// ContainerServiceOrchestratorProfile is profile for Orchestrator
type ContainerServiceOrchestratorProfile struct {
	OrchestratorType ContainerServiceOchestratorTypes `json:"orchestratorType,omitempty"`
}

// ContainerServiceProperties is properties of container service
type ContainerServiceProperties struct {
	ProvisioningState   *string                              `json:"provisioningState,omitempty"`
	OrchestratorProfile *ContainerServiceOrchestratorProfile `json:"orchestratorProfile,omitempty"`
	MasterProfile       *ContainerServiceMasterProfile       `json:"masterProfile,omitempty"`
	AgentPoolProfiles   *[]ContainerServiceAgentPoolProfile  `json:"agentPoolProfiles,omitempty"`
	WindowsProfile      *ContainerServiceWindowsProfile      `json:"windowsProfile,omitempty"`
	LinuxProfile        *ContainerServiceLinuxProfile        `json:"linuxProfile,omitempty"`
	DiagnosticsProfile  *ContainerServiceDiagnosticsProfile  `json:"diagnosticsProfile,omitempty"`
}

// ContainerServiceSSHConfiguration is sSH configuration for Linux based VMs
// running on Azure
type ContainerServiceSSHConfiguration struct {
	PublicKeys *[]ContainerServiceSSHPublicKey `json:"publicKeys,omitempty"`
}

// ContainerServiceSSHPublicKey is contains information about SSH certificate
// public key data.
type ContainerServiceSSHPublicKey struct {
	KeyData *string `json:"keyData,omitempty"`
}

// ContainerServiceVMDiagnostics is describes VM Diagnostics.
type ContainerServiceVMDiagnostics struct {
	Enabled    *bool   `json:"enabled,omitempty"`
	StorageURI *string `json:"storageUri,omitempty"`
}

// ContainerServiceWindowsProfile is profile for Windows VMs
type ContainerServiceWindowsProfile struct {
	AdminUsername *string `json:"adminUsername,omitempty"`
	AdminPassword *string `json:"adminPassword,omitempty"`
}

// Resource is
type Resource struct {
	ID       *string             `json:"id,omitempty"`
	Name     *string             `json:"name,omitempty"`
	Type     *string             `json:"type,omitempty"`
	Location *string             `json:"location,omitempty"`
	Tags     *map[string]*string `json:"tags,omitempty"`
}
